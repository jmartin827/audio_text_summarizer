
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
  clusterIP: None

---
apiVersion: v1
kind: Service
metadata:
  name: fast-api-service
spec:
  type: NodePort
  selector:
    app: fast-api
  ports:
    - name: http
      port: 80
      targetPort: 8000
      nodePort: 32767

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-volume
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /Users/turbo/shared-volume

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc1
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - name: redis
              containerPort: 6379
          envFrom:
            - configMapRef:
                name: app-configs
          resources:
            limits:
              cpu: "0.02"
              memory: "64Mi"
            requests:
              cpu: "0.01"
              memory: "32Mi"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
spec:
  selector:
    matchLabels:
      app: celery-worker
  replicas: 1
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
        - name: celery-worker
          image: dockerman2322/celery
#          command:
          envFrom:
            - configMapRef:
                name: app-configs
          volumeMounts:
            - name: shared-volume
              mountPath: /app/input
          resources:
            limits:
              cpu: "1"
              memory: "1000Mi"
            requests:
              cpu: "1"
              memory: "300Mi"
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: shared-pvc1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
spec:
  selector:
    matchLabels:
      app: flower
  replicas: 1
  template:
    metadata:
      labels:
        app: flower
    spec:
      containers:
        - name: flower
          image: mher/flower
          envFrom:
            - configMapRef:
                name: app-configs
          ports:
            - containerPort: 8888
          resources:
            limits:
              cpu: "0.05"
              memory: "128Mi"
            requests:
              cpu: "0.02"
              memory: "64Mi"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fast-api
spec:
  selector:
    matchLabels:
      app: fast-api
  replicas: 1
  template:
    metadata:
      labels:
        app: fast-api
    spec:
      containers:
        - name: fast-api
          image: dockerman2322/fast-api
          envFrom:
            - configMapRef:
                name: app-configs
          volumeMounts:
            - name: shared-volume
              mountPath: /app/input
          ports:
            - name: fast-api
              containerPort: 8000
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: shared-pvc1
