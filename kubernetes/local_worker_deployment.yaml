apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-local
spec:
  selector:
    matchLabels:
      app: celery-worker
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
        - name: celery-worker
          image: dockerman2322/celery:amd64
          imagePullPolicy: Always
          # Constantly checks that it can communicate with redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - >
                  if redis-cli -h redis ping | grep -q PONG; then
                    echo "ready"
                    exit 0
                  else
                    echo "not ready"
                    exit 1
                  fi
            initialDelaySeconds: 40
            periodSeconds: 60
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              # Will look for workers and a worker will result in "celery-worker" being shown.
              command:
                - sh
                - -c
                - "celery status | grep -q celery-worker"
            initialDelaySeconds: 60
            periodSeconds: 180
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 2
          lifecycle:
            # Initializes the container with Whisper
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - |
                    python3 initialize.py
                    if [ $? -eq 0 ]; then
                      echo "Validation successful"
                    else
                      echo "Validation failed, exiting"
                      exit 1
                    fi

          envFrom:
            - configMapRef:
                name: app-configs
          volumeMounts:
            - name: shared-file-input-pv
              mountPath: /input
          resources:
            limits:
              cpu: "1.2"  # 2vCPU Digital Ocean cluster idles at 20%
              memory: "1500Mi"
            requests:
              cpu: "0.8"
              memory: "1200Mi"
      volumes:
        - name: shared-file-input-pv
          persistentVolumeClaim:
            claimName: shared-file-input-pvc